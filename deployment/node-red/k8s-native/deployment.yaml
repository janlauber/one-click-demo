apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
  namespace: demo-node-red
  labels:
    rollout.one-click.dev/name: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      rollout.one-click.dev/name: node-red
  template:
    metadata:
      labels:
        rollout.one-click.dev/name: node-red
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
      containers:
        - name: node-red
          image: docker.io/nodered/node-red:3.1.3
          ports:
            - containerPort: 1880
              protocol: TCP
          env:
            - name: TZ
              value: Europe/Zurich
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: data
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: nginx
      serviceAccount: nginx
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
